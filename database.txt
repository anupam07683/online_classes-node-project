CREATE DATABASE IF NOT EXIST COLLEGE;
USE COLLEGE;

CREATE TABLE  IF NOT EXIST USER(
			EMAIL VARCHAR(50),
			SCHOLAR INT,
			FIRST_NAME VARCHAR(30) NOT NULL,
			LAST_NAME VARCHAR(30),
			SEMESTER INT,
			DEPARTMENT VARCHAR(50) NOT NULL,
			GENDER VARCHAR(10) NOT NULL,
			PASSWORD VARCHAR(200) NOT NULL,
			ROLE VARCHAR(30) NOT NULL,
			CREATED DATE,
			MODIFIED DATE,
			PRIMARY KEY(EMAIL)
);

CREATE TABLE  IF NOT EXIST STUDENT(SCHOLAR VARCHAR(10),
			FIRST_NAME VARCHAR(15),
			LAST_NAME VARCHAR(15),
			SEMESTER INT,
			GENDER VARCHAR(5),
			BRANCH VARCHAR(15),
			PASSWORD VARCHAR(30),
			CREATED DATE,
			MODIFIED DATE,
			PRIMARY KEY(SCHOLAR)
			);


CREATE TABLE IF NOT EXIST  FACULTY(
			EMAIL VARCHAR(30),
			FIRST_NAME VARCHAR(15),
			LAST_NAME VARCHAR(15),
			DEPARTMENT VARCHAR(30),
			GENDER VARCHAR(5),
			PASSWORD VARCHAR(30),
			CREATED DATE,
			MODIFIED DATE,
			PRIMARY KEY(EMAIL)
			);

CREATE TABLE IF NOT EXIST  JOINED(
	EMAIL VARCHAR(50),
	COURSE_NAME VARCHAR(30) NOT NULL, 
	FOREIGN KEY (EMAIL) REFERENCES USER (EMAIL) ON DELETE CASCADE ON UPDATE CASCADE,
	FOREIGN KEY (COURSE_NAME) REFERENCES COURSES (COURSE_NAME) ON DELETE CASCADE ON UPDATE CASCADE,
	PRIMARY KEY(EMAIL,COURSE_NAME)
);
 
CREATE TABLE IF NOT EXIST COURSES (
	COURSE_NAME VARCHAR(30) PRIMARY KEY NOT NULL,
	MENTOR VARCHAR(30) NOT NULL,
	DEPARTMENT VARCHAR(30) NOT NULL,
	CREATED DATE
);
 

CREATE TABLE IF NOT EXIST  ASSIGNMENT(
	COURSE_NAME VARCHAR(30),
	PATH VARCHAR(100) NOT NULL,
	FOREIGN KEY (COURSE_NAME) REFERENCES COURSES (COURSE_NAME) ON DELETE CASCADE ON UPDATE CASCADE,
	PRIMARY KEY (COURSE_NAME , PATH)
);
 
CREATE TABLE IF NOT EXIST NOTES (
	COURSE_NAME VARCHAR(30) ,
	PATH VARCHAR(100) NOT NULL,
	FOREIGN KEY (COURSE_NAME) REFERENCES COURSES (COURSE_NAME) ON DELETE CASCADE ON UPDATE CASCADE,
	PRIMARY KEY ( COURSE_NAME , PATH)
);

 
CREATE TABLE IF NOT EXIST SUBMITTED (
	EMAIL VARCHAR(50) NOT NULL,
	COURSE_NAME VARCHAR(30) NOT NULL,
	ASSIGNMENT_NO INT  NOT NULL,
	NAME VARCHAR(100) NOT NULL,
	FOREIGN KEY (EMAIL) REFERENCES USER (EMAIL) ON DELETE CASCADE ON UPDATE CASCADE,
	FOREIGN KEY (COURSE_NAME) REFERENCES COURSES (COURSE_NAME) ON DELETE CASCADE ON UPDATE CASCADE
);

CREATE TABLE IF NOT EXIST RESETPASSWORD(
	EMAIL VARCHAR(50) NOT NULL UNIQUE,
	OTP INT,
	TIME BIGINT,
	FOREIGN KEY (EMAIL) REFERENCES USER (EMAIL) ON DELETE CASCADE ON UPDATE CASCADE
);

